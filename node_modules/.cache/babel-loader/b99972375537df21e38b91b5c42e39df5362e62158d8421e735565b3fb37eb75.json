{"ast":null,"code":"var _jsxFileName = \"/Users/tal.milner/Documents/Cursor AI Projects/Brand Share Report/src/components/InteractiveLineChart.tsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { chartData } from '../data/chartData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InteractiveLineChart = ({\n  selectedBrands,\n  brandColorMap,\n  metricIdx\n}) => {\n  const data = metricIdx === 0 ? chartData.productViews : metricIdx === 1 ? chartData.unitsSold : chartData.revenue;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 bg-white p-4 rounded-lg h-[400px]\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), Array.from(selectedBrands).map(brand => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: brand,\n          stroke: brandColorMap[brand],\n          strokeWidth: 2,\n          activeDot: {\n            r: 8\n          }\n        }, brand, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = InteractiveLineChart;\nexport default InteractiveLineChart;\nvar _c;\n$RefreshReg$(_c, \"InteractiveLineChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","chartData","jsxDEV","_jsxDEV","InteractiveLineChart","selectedBrands","brandColorMap","metricIdx","data","productViews","unitsSold","revenue","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","Array","from","map","brand","type","stroke","strokeWidth","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/tal.milner/Documents/Cursor AI Projects/Brand Share Report/src/components/InteractiveLineChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { chartData } from '../data/chartData';\n\ninterface InteractiveLineChartProps {\n  selectedBrands: Set<string>;\n  brandColorMap: Record<string, string>;\n  metricIdx: number;\n}\n\nconst InteractiveLineChart: React.FC<InteractiveLineChartProps> = ({ selectedBrands, brandColorMap, metricIdx }) => {\n  const data = metricIdx === 0 ? chartData.productViews : metricIdx === 1 ? chartData.unitsSold : chartData.revenue;\n\n  return (\n    <div className=\"flex-1 bg-white p-4 rounded-lg h-[400px]\">\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          {Array.from(selectedBrands).map((brand) => (\n            <Line\n              key={brand}\n              type=\"monotone\"\n              dataKey={brand}\n              stroke={brandColorMap[brand]}\n              strokeWidth={2}\n              activeDot={{ r: 8 }}\n            />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default InteractiveLineChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,mBAAmB,QACd,UAAU;AACjB,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ9C,MAAMC,oBAAyD,GAAGA,CAAC;EAAEC,cAAc;EAAEC,aAAa;EAAEC;AAAU,CAAC,KAAK;EAClH,MAAMC,IAAI,GAAGD,SAAS,KAAK,CAAC,GAAGN,SAAS,CAACQ,YAAY,GAAGF,SAAS,KAAK,CAAC,GAAGN,SAAS,CAACS,SAAS,GAAGT,SAAS,CAACU,OAAO;EAEjH,oBACER,OAAA;IAAKS,SAAS,EAAC,0CAA0C;IAAAC,QAAA,eACvDV,OAAA,CAACH,mBAAmB;MAACc,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAAF,QAAA,eAC7CV,OAAA,CAACT,SAAS;QACRc,IAAI,EAAEA,IAAK;QACXQ,MAAM,EAAE;UACNC,GAAG,EAAE,CAAC;UACNC,KAAK,EAAE,EAAE;UACTC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;QACV,CAAE;QAAAP,QAAA,gBAEFV,OAAA,CAACL,aAAa;UAACuB,eAAe,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCtB,OAAA,CAACP,KAAK;UAAC8B,OAAO,EAAC;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxBtB,OAAA,CAACN,KAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTtB,OAAA,CAACJ,OAAO;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACVE,KAAK,CAACC,IAAI,CAACvB,cAAc,CAAC,CAACwB,GAAG,CAAEC,KAAK,iBACpC3B,OAAA,CAACR,IAAI;UAEHoC,IAAI,EAAC,UAAU;UACfL,OAAO,EAAEI,KAAM;UACfE,MAAM,EAAE1B,aAAa,CAACwB,KAAK,CAAE;UAC7BG,WAAW,EAAE,CAAE;UACfC,SAAS,EAAE;YAAEC,CAAC,EAAE;UAAE;QAAE,GALfL,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACW,EAAA,GAjCIhC,oBAAyD;AAmC/D,eAAeA,oBAAoB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}