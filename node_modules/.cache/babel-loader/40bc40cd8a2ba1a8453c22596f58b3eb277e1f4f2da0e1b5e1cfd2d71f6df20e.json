{"ast":null,"code":"var _jsxFileName = \"/Users/tal.milner/Documents/Cursor AI Projects/Brand Share Report/src/components/BrandLegendListbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst brandColors = ['text-blue-600', 'text-orange-500', 'text-green-500', 'text-yellow-500', 'text-purple-500', 'text-pink-500', 'text-teal-500', 'text-red-500'];\nconst BrandLegendListbox = ({\n  brands\n}) => {\n  _s();\n  const [selectedBrands, setSelectedBrands] = useState(new Set(['Nike'])); // Start with Nike selected\n  const maxSelections = 6;\n  const legendItems = brands.map((brand, index) => ({\n    name: brand,\n    color: brandColors[index % brandColors.length]\n  }));\n  const handleBrandToggle = brandName => {\n    const newSelected = new Set(selectedBrands);\n    if (newSelected.has(brandName)) {\n      newSelected.delete(brandName);\n    } else if (newSelected.size < maxSelections) {\n      newSelected.add(brandName);\n    }\n    setSelectedBrands(newSelected);\n  };\n  const isDisabled = brandName => {\n    return !selectedBrands.has(brandName) && selectedBrands.size >= maxSelections;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col bg-white p-4 rounded-lg border border-border-gray w-64 h-[400px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto space-y-2\",\n      children: [legendItems.slice(0, 1).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: true,\n          className: `form-checkbox ${item.color}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-text-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold\",\n            children: \"My Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" - \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs font-bold text-text-dark mt-2 mb-1\",\n        children: \"Competitors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), legendItems.slice(1).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: true,\n          className: `form-checkbox ${item.color}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-text-dark\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 pt-2 border-t border-border-gray flex justify-between items-center text-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-primary-blue font-bold\",\n        children: \"Select Top Competitors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-text-secondary\",\n        children: \"4/6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BrandLegendListbox, \"1XIr97v3PGxRiu+5D+T2ODOnyto=\");\n_c = BrandLegendListbox;\nexport default BrandLegendListbox;\nvar _c;\n$RefreshReg$(_c, \"BrandLegendListbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","brandColors","BrandLegendListbox","brands","_s","selectedBrands","setSelectedBrands","Set","maxSelections","legendItems","map","brand","index","name","color","length","handleBrandToggle","brandName","newSelected","has","delete","size","add","isDisabled","className","children","slice","item","type","defaultChecked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tal.milner/Documents/Cursor AI Projects/Brand Share Report/src/components/BrandLegendListbox.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface BrandLegendListboxProps {\n  brands: string[];\n}\n\nconst brandColors = [\n  'text-blue-600',\n  'text-orange-500',\n  'text-green-500',\n  'text-yellow-500',\n  'text-purple-500',\n  'text-pink-500',\n  'text-teal-500',\n  'text-red-500',\n];\n\nconst BrandLegendListbox: React.FC<BrandLegendListboxProps> = ({ brands }) => {\n  const [selectedBrands, setSelectedBrands] = useState<Set<string>>(new Set(['Nike'])); // Start with Nike selected\n  const maxSelections = 6;\n\n  const legendItems = brands.map((brand, index) => ({\n    name: brand,\n    color: brandColors[index % brandColors.length],\n  }));\n\n  const handleBrandToggle = (brandName: string) => {\n    const newSelected = new Set(selectedBrands);\n    if (newSelected.has(brandName)) {\n      newSelected.delete(brandName);\n    } else if (newSelected.size < maxSelections) {\n      newSelected.add(brandName);\n    }\n    setSelectedBrands(newSelected);\n  };\n\n  const isDisabled = (brandName: string) => {\n    return !selectedBrands.has(brandName) && selectedBrands.size >= maxSelections;\n  };\n\n  return (\n    <div className=\"flex flex-col bg-white p-4 rounded-lg border border-border-gray w-64 h-[400px]\">\n      <div className=\"flex-grow overflow-y-auto space-y-2\">\n        {/* My Brand */}\n        {legendItems.slice(0, 1).map((item, index) => (\n          <div key={index} className=\"flex items-center gap-2 text-sm\">\n            <input type=\"checkbox\" defaultChecked className={`form-checkbox ${item.color}`} />\n            <span className=\"text-text-dark\">\n              <span className=\"font-bold\">My Brand</span>\n              <span> - {item.name}</span>\n            </span>\n          </div>\n        ))}\n        \n        {/* Competitors separator */}\n        <div className=\"text-xs font-bold text-text-dark mt-2 mb-1\">\n          Competitors:\n        </div>\n        \n        {/* Other brands */}\n        {legendItems.slice(1).map((item, index) => (\n          <div key={index + 1} className=\"flex items-center gap-2 text-sm\">\n            <input type=\"checkbox\" defaultChecked className={`form-checkbox ${item.color}`} />\n            <span className=\"text-text-dark\">{item.name}</span>\n          </div>\n        ))}\n      </div>\n      <div className=\"mt-4 pt-2 border-t border-border-gray flex justify-between items-center text-xs\">\n        <button className=\"text-primary-blue font-bold\">Select Top Competitors</button>\n        <span className=\"text-text-secondary\">4/6</span>\n      </div>\n    </div>\n  );\n};\n\nexport default BrandLegendListbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}