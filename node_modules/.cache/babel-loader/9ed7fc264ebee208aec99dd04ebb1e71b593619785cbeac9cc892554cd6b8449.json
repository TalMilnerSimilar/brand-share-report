{"ast":null,"code":"var _jsxFileName = \"/Users/tal.milner/Documents/Cursor AI Projects/Brand Share Report/src/components/BrandLegendListbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst brandColors = ['text-blue-600', 'text-orange-500', 'text-green-500', 'text-yellow-500', 'text-purple-500', 'text-pink-500', 'text-teal-500', 'text-red-500'];\nconst BrandLegendListbox = ({\n  brands\n}) => {\n  _s();\n  const [selectedBrands, setSelectedBrands] = useState(new Set(['Nike'])); // Start with Nike selected\n  const maxSelections = 6;\n  const legendItems = brands.map((brand, index) => ({\n    name: brand,\n    color: brandColors[index % brandColors.length]\n  }));\n  const handleBrandToggle = brandName => {\n    const newSelected = new Set(selectedBrands);\n    if (newSelected.has(brandName)) {\n      newSelected.delete(brandName);\n    } else if (newSelected.size < maxSelections) {\n      newSelected.add(brandName);\n    }\n    setSelectedBrands(newSelected);\n  };\n  const isDisabled = brandName => {\n    return !selectedBrands.has(brandName) && selectedBrands.size >= maxSelections;\n  };\n  const handleSelectTopCompetitors = () => {\n    const topCompetitors = ['Nike', 'Adidas', 'New Balance', 'Hoka', 'Asics'];\n    setSelectedBrands(new Set(topCompetitors));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col bg-white p-4 rounded-lg border border-border-gray w-64 h-[400px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow overflow-y-auto space-y-2\",\n      children: [legendItems.slice(0, 1).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedBrands.has(item.name),\n          onChange: () => handleBrandToggle(item.name),\n          className: `form-checkbox ${item.color}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-text-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold\",\n            children: \"My Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" - \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs font-bold text-text-dark mt-2 mb-1\",\n        children: \"Competitors:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), legendItems.slice(1).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedBrands.has(item.name),\n          onChange: () => handleBrandToggle(item.name),\n          disabled: isDisabled(item.name),\n          className: `form-checkbox ${item.color} ${isDisabled(item.name) ? 'opacity-50 cursor-not-allowed' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text-text-dark ${isDisabled(item.name) ? 'opacity-50' : ''}`,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, index + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs font-bold text-text-dark mt-2 mb-1\",\n        children: \"All Brands:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedBrands.has('All Other Brands'),\n          onChange: () => handleBrandToggle('All Other Brands'),\n          disabled: isDisabled('All Other Brands'),\n          className: \"form-checkbox text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-text-dark\",\n          children: \"All Other Brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 pt-2 border-t border-border-gray flex justify-between items-center text-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-primary-blue font-bold\",\n        onClick: handleSelectTopCompetitors,\n        children: \"Select Top Competitors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-text-secondary\",\n        children: [selectedBrands.size, \"/\", maxSelections]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BrandLegendListbox, \"1XIr97v3PGxRiu+5D+T2ODOnyto=\");\n_c = BrandLegendListbox;\nexport default BrandLegendListbox;\nvar _c;\n$RefreshReg$(_c, \"BrandLegendListbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","brandColors","BrandLegendListbox","brands","_s","selectedBrands","setSelectedBrands","Set","maxSelections","legendItems","map","brand","index","name","color","length","handleBrandToggle","brandName","newSelected","has","delete","size","add","isDisabled","handleSelectTopCompetitors","topCompetitors","className","children","slice","item","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/tal.milner/Documents/Cursor AI Projects/Brand Share Report/src/components/BrandLegendListbox.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface BrandLegendListboxProps {\n  brands: string[];\n}\n\nconst brandColors = [\n  'text-blue-600',\n  'text-orange-500',\n  'text-green-500',\n  'text-yellow-500',\n  'text-purple-500',\n  'text-pink-500',\n  'text-teal-500',\n  'text-red-500',\n];\n\nconst BrandLegendListbox: React.FC<BrandLegendListboxProps> = ({ brands }) => {\n  const [selectedBrands, setSelectedBrands] = useState<Set<string>>(new Set(['Nike'])); // Start with Nike selected\n  const maxSelections = 6;\n\n  const legendItems = brands.map((brand, index) => ({\n    name: brand,\n    color: brandColors[index % brandColors.length],\n  }));\n\n  const handleBrandToggle = (brandName: string) => {\n    const newSelected = new Set(selectedBrands);\n    if (newSelected.has(brandName)) {\n      newSelected.delete(brandName);\n    } else if (newSelected.size < maxSelections) {\n      newSelected.add(brandName);\n    }\n    setSelectedBrands(newSelected);\n  };\n\n  const isDisabled = (brandName: string) => {\n    return !selectedBrands.has(brandName) && selectedBrands.size >= maxSelections;\n  };\n\n  const handleSelectTopCompetitors = () => {\n    const topCompetitors = ['Nike', 'Adidas', 'New Balance', 'Hoka', 'Asics'];\n    setSelectedBrands(new Set(topCompetitors));\n  };\n\n  return (\n    <div className=\"flex flex-col bg-white p-4 rounded-lg border border-border-gray w-64 h-[400px]\">\n      <div className=\"flex-grow overflow-y-auto space-y-2\">\n        {/* My Brand */}\n        {legendItems.slice(0, 1).map((item, index) => (\n          <div key={index} className=\"flex items-center gap-2 text-sm\">\n            <input \n              type=\"checkbox\" \n              checked={selectedBrands.has(item.name)}\n              onChange={() => handleBrandToggle(item.name)}\n              className={`form-checkbox ${item.color}`} \n            />\n            <span className=\"text-text-dark\">\n              <span className=\"font-bold\">My Brand</span>\n              <span> - {item.name}</span>\n            </span>\n          </div>\n        ))}\n        \n        {/* Competitors separator */}\n        <div className=\"text-xs font-bold text-text-dark mt-2 mb-1\">\n          Competitors:\n        </div>\n        \n        {/* Other brands */}\n        {legendItems.slice(1).map((item, index) => (\n          <div key={index + 1} className=\"flex items-center gap-2 text-sm\">\n            <input \n              type=\"checkbox\" \n              checked={selectedBrands.has(item.name)}\n              onChange={() => handleBrandToggle(item.name)}\n              disabled={isDisabled(item.name)}\n              className={`form-checkbox ${item.color} ${isDisabled(item.name) ? 'opacity-50 cursor-not-allowed' : ''}`} \n            />\n            <span className={`text-text-dark ${isDisabled(item.name) ? 'opacity-50' : ''}`}>{item.name}</span>\n          </div>\n        ))}\n        \n        {/* All Brands separator */}\n        <div className=\"text-xs font-bold text-text-dark mt-2 mb-1\">\n          All Brands:\n        </div>\n        \n        {/* All brands option */}\n        <div className=\"flex items-center gap-2 text-sm\">\n          <input \n            type=\"checkbox\" \n            checked={selectedBrands.has('All Other Brands')}\n            onChange={() => handleBrandToggle('All Other Brands')}\n            disabled={isDisabled('All Other Brands')}\n            className=\"form-checkbox text-gray-400\" \n          />\n          <span className=\"text-text-dark\">All Other Brands</span>\n        </div>\n      </div>\n      <div className=\"mt-4 pt-2 border-t border-border-gray flex justify-between items-center text-xs\">\n        <button \n          className=\"text-primary-blue font-bold\"\n          onClick={handleSelectTopCompetitors}\n        >\n          Select Top Competitors\n        </button>\n        <span className=\"text-text-secondary\">{selectedBrands.size}/{maxSelections}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default BrandLegendListbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}